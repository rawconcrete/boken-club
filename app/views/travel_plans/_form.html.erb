<div class="travel-plan-container"
     data-controller="travel-plan"
     data-travel-plan-locations-value="<%= travel_plan.locations.to_json %>"
     data-travel-plan-adventures-value="<%= travel_plan.adventures.reject(&:nil?).to_json %>">
  <%= form_with(model: travel_plan, local: true, data: { action: "submit->travel-plan#formSubmit" }) do |f| %>
    <!-- Layout Grid -->
    <div class="travel-plan-layout">
      <!-- Left Sidebar - Skills -->
      <div class="travel-plan-sidebar travel-plan-skills">
        <div class="sidebar-card"
             data-controller="skills-recommendation"
             data-skills-recommendation-travel-plan-id-value="<%= travel_plan.persisted? ? travel_plan.id : 0 %>"
             data-skills-recommendation-selected-skill-ids-value="<%= travel_plan.skill_ids.to_json %>">
          <div class="sidebar-header">
            <h5>Recommended Skills</h5>
            <p class="text-muted small mb-0">Click "Add to Plan" to include skills you want to learn or reference for this trip.</p>
          </div>
          <div class="sidebar-body">
            <div data-skills-recommendation-target="skillsList">
              <div class="alert alert-info">
                <p>Select locations and adventures to see recommended skills.</p>
                <% word = travel_plan.skills.count == 1 ? "skill" : "skills" %>
                <% string = "You have #{travel_plan.skills.count} #{word} already selected." %>
                <% if travel_plan.skills.any? %>
                  <p><%= string %></p>
                <% end %>
              </div>
            </div>
            <div id="selected-skills-container" style="display: none;">
              <% travel_plan.skill_ids.each do |skill_id| %>
                <input type="hidden" name="travel_plan[skill_ids][]" value="<%= skill_id %>">
              <% end %>
            </div>
          </div>
        </div>
      </div>
      <!-- Main Content -->
      <div class="travel-plan-main">
        <div class="main-content-scrollable">
          <!-- Trip Dates -->
          <div class="plan-section">
            <div class="plan-section-header">
              <h5>Trip Dates</h5>
            </div>
            <div class="plan-section-body">
              <div class="plan-date-inputs">
                <div class="plan-date-field">
                  <%= f.label :start_date, class: "form-label small" %>
                  <%= f.date_field :start_date,
                        class: "form-control form-control-sm",
                        data: { travel_plan_target: "startDate", action: "change->travel-plan#updateEquipment" } %>
                </div>
                <div class="plan-date-field">
                  <%= f.label :end_date, class: "form-label small" %>
                  <%= f.date_field :end_date, class: "form-control form-control-sm", data: { travel_plan_target: "endDate" } %>
                </div>
              </div>
            </div>
          </div>
          <!-- Plan Details -->
          <div class="plan-section">
            <div class="plan-section-header">
              <h5>Plan Details</h5>
            </div>
            <div class="plan-section-body">
              <%= f.label :title, class: "form-label small" %>
              <%= f.text_field :title, class: "form-control form-control-sm" %>
            </div>
          </div>
          <!-- Locations -->
          <div class="plan-section">
            <div class="plan-section-header">
              <h5>Locations</h5>
            </div>
            <div class="plan-section-body">
              <div data-travel-plan-target="selectedLocations" class="selected-items"></div>
              <input type="text"
                     class="form-control form-control-sm"
                     placeholder="Search locations..."
                     data-travel-plan-target="locationSearch"
                     data-action="input->travel-plan#searchLocations">
              <div data-travel-plan-target="locationResults" class="results-list"></div>
            </div>
          </div>
          <!-- Adventures Section -->
          <div class="plan-section">
            <div class="plan-section-header">
              <h5>Available Adventures</h5>
            </div>
            <div class="plan-section-body">
              <div data-travel-plan-target="selectedAdventures" class="selected-items"></div>
              <!-- This input is for filtering adventures already loaded -->
              <input type="text"
           class="form-control form-control-sm"
           placeholder="Filter adventures..."
           id="adventure-filter">
              <!-- List container for all adventures -->
              <div data-travel-plan-target="adventureResults" class="list-group mt-2" style="max-height: 300px; overflow-y: auto;"></div>
            </div>
          </div>
          <!-- Notes -->
          <div class="plan-section">
            <div class="plan-section-header">
              <h5>Notes to Self</h5>
            </div>
            <div class="plan-section-body">
              <%= f.text_area :content, class: "form-control form-control-sm", rows: 4, placeholder: "Add your personal notes about this trip here..." %>
            </div>
          </div>
          <!-- Save Button -->
          <div class="plan-actions">
            <%= link_to 'Cancel', :back, class: "btn btn-sm btn-secondary" %>
            <%= f.submit 'Save', class: "btn btn-sm btn-primary" %>
          </div>
        </div>
      </div>
      <!-- Right Sidebar - Equipment -->
      <div class="travel-plan-sidebar travel-plan-equipment">
        <div class="sidebar-card">
          <div class="sidebar-header">
            <h5>Recommended Equipment</h5>
            <p class="text-muted small mb-0">Click checkboxes to include equipment items you'll need for this trip.</p>
          </div>
          <div class="sidebar-body">
            <div class="equipment-list" data-travel-plan-target="equipmentList">
              <%# Equipment will be dynamically inserted here %>
            </div>
          </div>
        </div>
      </div>
    </div>
  <% end %>
</div>
<script>
  // Direct script to load and filter adventures
  document.addEventListener('DOMContentLoaded', function() {
    console.log("Adventure direct loader initialized");

    // Load all adventures
    const loadAdventures = function() {
      const adventureResults = document.querySelector('[data-travel-plan-target="adventureResults"]');
      const adventureFilter = document.getElementById('adventure-filter');

      if (!adventureResults) {
        console.error("Adventure results container not found");
        return;
      }

      console.log("Fetching adventures directly...");
      fetch('/adventures.json')
        .then(response => {
          if (!response.ok) {
            throw new Error("Network error fetching adventures");
          }
          return response.json();
        })
        .then(adventures => {
          console.log(`Successfully loaded ${adventures.length} adventures`);

          // Render the adventures
          renderAdventures(adventures, adventureResults);

          // Set up filter after adventures are loaded
          if (adventureFilter) {
            console.log("Setting up adventure filter");
            adventureFilter.addEventListener('input', function() {
              filterAdventures(this.value, adventureResults);
            });
          }
        })
        .catch(error => {
          console.error("Error loading adventures:", error);
          adventureResults.innerHTML = `<div class="alert alert-danger">Failed to load adventures: ${error.message}</div>`;
        });
    };

    // Render adventures to the container
    const renderAdventures = function(adventures, container) {
      if (!adventures || adventures.length === 0) {
        container.innerHTML = `<div class="list-group-item">No adventures available</div>`;
        return;
      }

      const adventureHtml = adventures.map(adventure => {
        const adventureData = JSON.stringify(adventure).replace(/"/g, '&quot;');
        return `
          <div class="list-group-item d-flex justify-content-between align-items-center">
            ${adventure.name}
            <button type="button"
                    class="btn btn-sm btn-primary"
                    data-action="click->travel-plan#selectAdventure"
                    data-adventure="${adventureData}">
              Add
            </button>
          </div>
        `;
      }).join('');

      container.innerHTML = adventureHtml;
    };

    // Filter the rendered adventures
    const filterAdventures = function(filterText, container) {
      const filterValue = filterText.toLowerCase();
      console.log(`Filtering adventures with: "${filterValue}"`);

      const adventureItems = container.querySelectorAll('.list-group-item');
      let matchCount = 0;

      adventureItems.forEach(item => {
        // Extract just the adventure name (not the button text)
        const adventureTextContent = item.childNodes[0].textContent.trim();
        const adventureName = adventureTextContent.toLowerCase();

        if (adventureName.includes(filterValue)) {
          item.style.display = '';
          matchCount++;
        } else {
          item.style.display = 'none';
        }
      });

      console.log(`Filter matched ${matchCount} adventures`);
    };

    // Load adventures after a short delay to ensure DOM is ready
    setTimeout(loadAdventures, 300);
  });
</script>
